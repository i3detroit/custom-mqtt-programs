# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Per Mark's original buildfile, may need to use GCC rather than CC or G++.
CC = gcc

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = ./googleTest/googletest
GMOCK_DIR = ./googleTest/googlemock

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h
GMOCK_HEADERS = $(GMOCK_DIR)/include/gmock/*.h \
                $(GMOCK_DIR)/include/gmock/internal/*.h

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# Where to find user code.
USER_DIR = .
USER_SRC_DIR = ..
USER_FIXTURES_DIR = $(USER_DIR)/fixtures

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
GTEST_HEADERS_INCLUDE += -isystem $(GTEST_DIR)/include 

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -pthread

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = testDoControl

# =============================================================================

all : $(TESTS)

# =============================================================================
.PHONY: clean-src clean-gtest clean-all testDoControl fixtures

clean-src :
	rm -f ${USER_DIR}/*.o
	rm -f $(USER_SRC_DIR)/*.o 
	rm -f $(USER_FIXTURES_DIR)/*.o

clean-gtest-lib :
	rm -f $(USER_DIR)/*.a

clean : clean-src clean-gtest-lib

# =============================================================================
# Builds gtest.a and gtest_main.a.
# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.

gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(GTEST_HEADERS_INCLUDE) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(GTEST_HEADERS_INCLUDE) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

libgtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^
	
libgtest_main.a : gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

# =============================================================================
# Build targets for tests and their components.

MillisFixture.o : $(USER_FIXTURES_DIR)/MillisFixture.cpp
	$(CC) $(CXXFLAGS) -I$(USER_FIXTURES_DIR) -c $^

PrintFixtures.o : $(USER_FIXTURES_DIR)/PrintFixtures.cpp
	$(CC) $(CXXFLAGS) -I$(USER_FIXTURES_DIR) -c $^

AssertionFixtures.o : $(USER_FIXTURES_DIR)/AssertionFixtures.cpp
	$(CC) $(CXXFLAGS) $(GTEST_HEADERS_INCLUDE) -I$(USER_FIXTURES_DIR) -I$(USER_DIR) -c $^
		
StateInitializers.o : $(USER_FIXTURES_DIR)/StateInitializers.cpp
	$(CC) $(CXXFLAGS) -I$(USER_FIXTURES_DIR) -c $^

# =============================================================================	

doControl.o : $(USER_SRC_DIR)/doControl.cpp
	$(CC) $(GTEST_HEADERS_INCLUDE) $(CXXFLAGS) -I$(USER_SRC_DIR) -I$(USER_FIXTURES_DIR) -DTESTING -c $^
	
testDoControl.o : $(USER_DIR)/testDoControl.cpp 
	$(CC) $(GTEST_HEADERS_INCLUDE) $(CXXFLAGS) $(GTEST_LIB_LINK) -I$(USER_DIR) -I$(USER_FIXTURES_DIR) -DTESTING -c $^  

#ld.gold -r -L. -lgtest -o testDoControl MillisFixture.o PrintFixtures.o testDoControl.o doControl.o  AssertionFixtures.o StateInitializers.o works...but that's relocatable.
# followed by linking the relocatable file---fails #ld.gold L. -lgtest -o testDoControl testDoControl
testDoControl : MillisFixture.o PrintFixtures.o AssertionFixtures.o StateInitializers.o doControl.o testDoControl.o gtest-all.o 
	$(CXX) $^ -o$@ $(CXXFLAGS)
	rm -f ${USER_DIR}/*.o
	rm -f $(USER_SRC_DIR)/*.o 
